{"version":3,"sources":["images/mobile.svg","images/ellipse.svg","images/design.svg","images/secure.svg","images/retina.svg","redux/actions/action-samples.js","redux/actions/action-types.js","redux/actions/server-error-action.js","components/homepage.js","redux/actions/fetch-users-actions.js","components/utils.js","components/pagination.js","components/nav-bar.js","components/spinner.js","components/users.js","redux/actions/fetch-details-actions.js","components/chart.js","components/user-statistic.js","components/error-handler-component.js","App.js","redux/reducers/users-reducer.js","redux/reducers/utils.js","redux/reducers/details-reducer.js","redux/reducers/error-reducer.js","redux/reducers/root-reducer.js","redux/store.js","index.js"],"names":["actionSamplePayload","type","payload","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_ERROR","FETCH_DETAILS_REQUEST","FETCH_DETAILS_SUCCESS","FETCH_DETAILS_ERROR","CHANGE_FROM","CHANGE_TO","CLEAN_ERROR","SET_NAME","serverErrorAction","Homepage","dispatch","useDispatch","history","useHistory","useEffect","a","fetch","response","ok","json","error","message","stack","fetchData","id","className","onClick","push","src","ellipse","alt","mobile","design","secure","retina","action","placeholder","value","fetchUsersSuccess","fetchUsersError","fetchUsersRequest","limit","page","resultsToDisplay","state","location","users","data","map","item","index","pathname","first_name","last_name","email","gender","ip_address","total_clicks","total_page_views","msInDay","Pages","useSelector","total","pagesQuantity","Pagination","count","variant","shape","size","onChange","e","NavBar","useParams","LinkRouter","props","component","Link","details","breadcrumbNameMap","indexToSlice","indexOf","pathnames","slice","split","filter","x","Breadcrumbs","aria-label","color","to","last","length","join","Typography","Spinner","SpinnerIcon","icon","faSpinner","Users","useLocation","loading","fetchDetailsSuccess","fetchDetailsError","fetchDetailsRequest","from","changeFrom","changeTo","setName","customizeTooltip","pointInfo","html","argumentText","points","seriesName","valueText","LineChart","correctedData","dataSource","name","values","valueField","axis","argumentField","overlappingBehavior","rotationAngle","showZero","enabled","shared","verticalAlignment","horizontalAlignment","visible","UserStatistic","params","minDate","maxDate","toInitial","Date","parse","toISOString","useForm","handleSubmit","control","setValue","namePayload","Number","userName","onSubmit","htmlFor","defaultValue","render","selected","dateFormat","withPortal","window","matchMedia","matches","date","Button","ErrorHandler","stateError","allErrorsHandler","addToast","useToasts","appearance","onDismiss","Application","path","exact","App","initialUsersState","correctStatisticBuilder","dataToCorrect","JSON","stringify","fromParsed","diffInDays","zeroArray","i","dateIsoString","clicks","page_views","splice","initialDetailsState","initialErrorState","rootReducer","combineReducers","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","initialState","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.24914a7f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mobile.ad4a598f.svg\";","export default __webpack_public_path__ + \"static/media/ellipse.6d43ff95.svg\";","export default __webpack_public_path__ + \"static/media/design.9c753d96.svg\";","export default __webpack_public_path__ + \"static/media/secure.a061921f.svg\";","export default __webpack_public_path__ + \"static/media/retina.3d9d8034.svg\";","export const actionSampleWoPayload = type => {\n  return () => {\n    return { type };\n  };\n};\n\nexport const actionSamplePayload = type => {\n  return payload => {\n    return {\n      type,\n      payload,\n    };\n  };\n};\n\nexport const actionAsyncSamplePayload = type => {\n  return payload => async dispatch => {\n    dispatch({\n      type,\n      payload,\n    });\n  };\n};\n","export const FETCH_USERS_REQUEST = '@users/FETCH_USERS_REQUEST';\nexport const FETCH_USERS_SUCCESS = '@users/FETCH_USERS_SUCCESS';\nexport const FETCH_USERS_ERROR = '@users/FETCH_USERS_ERROR';\nexport const FETCH_DETAILS_REQUEST = '@details/FETCH_DETAILS_REQUEST';\nexport const FETCH_DETAILS_SUCCESS = '@details/FETCH_DETAILS_SUCCESS';\nexport const FETCH_DETAILS_ERROR = '@details/FETCH_DETAILS_ERROR';\nexport const CHANGE_FROM = '@details/CHANGE_FROM';\nexport const CHANGE_TO = '@details/CHANGE_TO';\nexport const CLEAN_ERROR = '@error/CLEAN_ERROR';\nexport const SET_NAME = '@details/SET_NAME';\nexport const SERVER_ERROR = '@SERVER/SERVER_ERROR';\n","import { actionSamplePayload } from './action-samples';\nimport { SERVER_ERROR } from './action-types';\n\nexport const serverErrorAction = actionSamplePayload(SERVER_ERROR);\n","import React, { useEffect } from 'react';\nimport './components-styles/styles-homepage.scss';\nimport mobile from '../images/mobile.svg';\nimport ellipse from '../images/ellipse.svg';\nimport design from '../images/design.svg';\nimport secure from '../images/secure.svg';\nimport retina from '../images/retina.svg';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { serverErrorAction } from '../redux/actions/server-error-action';\n\nconst Homepage = () => {\n  const dispatch = useDispatch();\n  let history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        let response = await fetch('/');\n        if (!response.ok) {\n          const error = await response.json();\n          error.message = 'Internal server error';\n          dispatch(serverErrorAction({ error }));\n        }\n      } catch (err) {\n        const { message, stack } = err;\n        const error = { message, stack };\n        dispatch(serverErrorAction({ error }));\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div id=\"homepage\">\n      <div id=\"top-container\">\n        <div>AppCo</div>\n        <div>\n          <b>Brainstorming</b> for\n          <br /> desired perfect Usability\n        </div>\n        <div>\n          Our design projects are fresh and simple and will benefit your business greatly. Learn more about our work!\n        </div>\n        <div className=\"button\" onClick={() => history.push('/users/1')}>\n          Views Stats\n        </div>\n        <img id=\"ellipse\" src={ellipse} alt=\"ellipse\" />\n        <img id=\"mobile\" src={mobile} alt=\"mobile\" />\n      </div>\n      <div>\n        Why{' '}\n        <b>\n          small business owners <br />\n          love\n        </b>{' '}\n        AppCo?\n      </div>\n      <div>\n        Our design projects are fresh and simple and will benefit your business greatly. Learn more about our work!\n      </div>\n      <div id=\"products\">\n        <div className=\"product\">\n          <div>\n            <img src={design} alt=\"design\" />\n          </div>\n          <h3>Clean Design</h3>\n          <p>Increase sales by showing true dynamics of your website.</p>\n        </div>\n        <div className=\"product\">\n          <div>\n            <img src={secure} alt=\"secure\" />\n          </div>\n          <h3>Secure Data</h3>\n          <p>Build your online store’s trust using Social Proof & Urgency.</p>\n        </div>\n        <div className=\"product\">\n          <div>\n            <img src={retina} alt=\"retina\" />\n          </div>\n          <h3>Retina Ready</h3>\n          <p>Realize importance of social proof in customer’s purchase decision.</p>\n        </div>\n      </div>\n      <footer>\n        <form action=\"post>\">\n          <input type=\"e-mail\" placeholder=\"Enter your email\" />\n          <input type=\"button\" value=\"Subscribe\" />\n        </form>\n        <div className=\"flex-container\">\n          <div>AppCo</div>\n          <div>All rights reserved by ThemeTags</div>\n          <div>Copyrights © 2019.</div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import { FETCH_USERS_REQUEST, FETCH_USERS_ERROR, FETCH_USERS_SUCCESS } from './action-types';\nimport { actionSamplePayload } from './action-samples';\n\nexport const fetchUsersSuccess = actionSamplePayload(FETCH_USERS_SUCCESS);\nexport const fetchUsersError = actionSamplePayload(FETCH_USERS_ERROR);\nexport const fetchUsersRequest = payload => async dispatch => {\n  dispatch({ type: FETCH_USERS_REQUEST });\n  const { limit, page } = payload;\n  try {\n    let response = await fetch(`/users/${page}?limit=${limit}`);\n    if (response.ok) {\n      response = await response.json();\n      dispatch(fetchUsersSuccess(response));\n    } else {\n      const error = await response.json();\n      if (!error.message) {\n        error.message = 'Internal server error';\n      }\n      dispatch(fetchUsersError({ error }));\n    }\n  } catch (err) {\n    const { message, stack } = err;\n    const error = { message, stack };\n    dispatch(fetchUsersError({ error: error }));\n  }\n};\n","import React from 'react';\n\nexport const limit = 25;\nexport const resultsToDisplay = (state, location, history) => {\n  return state.users.data\n    ? state.users.data.map((item, index) => {\n        return (\n          <tr\n            key={index}\n            onClick={() => {\n              history.push(`${location.pathname}/user/${item.id}`);\n            }}\n          >\n            <td>{item.id}</td>\n            <td>{item.first_name}</td>\n            <td>{item.last_name}</td>\n            <td>{item.email}</td>\n            <td>{item.gender}</td>\n            <td>{item.ip_address}</td>\n            <td>{item.total_clicks}</td>\n            <td>{item.total_page_views}</td>\n          </tr>\n        );\n      })\n    : null;\n};\n\nexport const msInDay = 86400000;\n\nexport const userName = (state, id) => {\n  if (id) {\n    const user = state.users.data.filter(item => item.id === Number(id));\n    const { first_name, last_name } = user[0];\n    return { first_name, last_name };\n  } else {\n    return null;\n  }\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Pagination } from '@material-ui/lab';\nimport { useHistory } from 'react-router-dom';\nimport { limit } from './utils';\n\nconst Pages = () => {\n  const state = useSelector(state => state);\n  let history = useHistory();\n  const { total } = state.users;\n  const pagesQuantity = total % limit ? total / limit + 1 : total / limit;\n  return (\n    <div id=\"pagination\">\n      <Pagination\n        count={pagesQuantity}\n        variant=\"outlined\"\n        shape=\"rounded\"\n        size=\"small\"\n        onChange={(e, page) => {\n          history.push(`/users/${page}`);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Pages;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, Route, useParams } from 'react-router-dom';\nimport { default as MuiLink } from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nconst NavBar = () => {\n  const state = useSelector(state => {\n    return state;\n  });\n  const { page, id } = useParams();\n  const LinkRouter = props => <MuiLink {...props} component={Link} />;\n  const { first_name, last_name } = state.details;\n  const breadcrumbNameMap = {\n    [`/users/${page}`]: [`Users page ${page}`],\n    [`/users/${page}/user/${id}`]: first_name ? [`${first_name} ${last_name}`] : null,\n  };\n\n  return (\n    <div id=\"nav-bar\" className=\"flex-container\">\n      <div id=\"breadcrumbs-container\">\n        <Route>\n          {({ location }) => {\n            let pathname;\n            const indexToSlice = location.pathname.indexOf('?') + 1;\n            if (indexToSlice > 0) {\n              pathname = location.pathname.slice(0, indexToSlice);\n            } else {\n              pathname = location.pathname;\n            }\n            const pathnames = pathname.split('/').filter(x => x);\n\n            return (\n              <Breadcrumbs aria-label=\"breadcrumb\">\n                <LinkRouter color=\"inherit\" to=\"/\">\n                  Home\n                </LinkRouter>\n                {pathnames.map((value, index) => {\n                  if (value === 'users' || value === 'user') {\n                    return null;\n                  }\n                  const last = index === pathnames.length - 1;\n                  const to = `/${pathnames.slice(0, index + 1).join('/')}`;\n\n                  return last ? (\n                    <Typography color=\"textPrimary\" key={to}>\n                      {breadcrumbNameMap[to]}\n                    </Typography>\n                  ) : (\n                    <LinkRouter color=\"inherit\" to={to} key={to}>\n                      {breadcrumbNameMap[to]}\n                    </LinkRouter>\n                  );\n                })}\n              </Breadcrumbs>\n            );\n          }}\n        </Route>\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst Spinner = () => {\n  const SpinnerIcon = <FontAwesomeIcon icon={faSpinner} />;\n  return (\n    <div id=\"spinner-container\">\n      <div id=\"spinner-icon\">\n        <span>{SpinnerIcon}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useEffect } from 'react';\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUsersRequest } from '../redux/actions/fetch-users-actions';\nimport { resultsToDisplay, limit } from './utils';\nimport Pages from './pagination';\nimport NavBar from './nav-bar';\nimport './components-styles/styles-users.scss';\nimport './components-styles/common-components-styles.scss';\nimport Spinner from './spinner';\n\nconst Users = () => {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const { page } = useParams();\n  let location = useLocation();\n  let history = useHistory();\n\n  useEffect(() => {\n    dispatch(fetchUsersRequest({ limit, page: page - 1 }));\n  }, [page]);\n\n  return (\n    <div id=\"users\" className=\"flex-container\">\n      <header className=\"flex-container\">AppCo</header>\n      {state.users.loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <main>\n            <NavBar />\n            <h3 className=\"flex-container\">Users statistics</h3>\n            <table>\n              <thead>\n                <tr>\n                  <th>\n                    <h3>Id</h3>\n                  </th>\n                  <th>\n                    <h3>First name</h3>\n                  </th>\n                  <th>\n                    <h3>Last name</h3>\n                  </th>\n                  <th>\n                    <h3>Email</h3>\n                  </th>\n                  <th>\n                    <h3>Gender</h3>\n                  </th>\n                  <th>\n                    <h3>Ip address</h3>\n                  </th>\n                  <th>\n                    <h3>Total clicks</h3>\n                  </th>\n                  <th>\n                    <h3>Total page views</h3>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{resultsToDisplay(state, location, history)}</tbody>\n            </table>\n          </main>\n          <Pages />\n        </>\n      )}\n      <footer>\n        <div className=\"flex-container\">\n          <div>AppCo</div>\n          <div>All rights reserved by ThemeTags</div>\n          <div>Copyrights © 2019.</div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Users;\n","import {\n  FETCH_DETAILS_REQUEST,\n  FETCH_DETAILS_ERROR,\n  FETCH_DETAILS_SUCCESS,\n  CHANGE_FROM,\n  CHANGE_TO,\n  SET_NAME,\n} from './action-types';\nimport { actionSamplePayload } from './action-samples';\n\nexport const fetchDetailsSuccess = actionSamplePayload(FETCH_DETAILS_SUCCESS);\nexport const fetchDetailsError = actionSamplePayload(FETCH_DETAILS_ERROR);\nexport const fetchDetailsRequest = payload => async dispatch => {\n  dispatch({ type: FETCH_DETAILS_REQUEST });\n  const { id, page, from, to } = payload;\n  try {\n    let response = await fetch(`/users/${page}/user/${id}?from=${from}&to=${to}`);\n    if (response.ok) {\n      response = await response.json();\n      response.from = from;\n      response.to = to;\n      dispatch(fetchDetailsSuccess(response));\n    } else {\n      const error = await response.json();\n      if (!error.message) {\n        error.message = 'Internal server error';\n      }\n      dispatch(fetchDetailsError({ error }));\n    }\n  } catch (err) {\n    const { message, stack } = err;\n    const error = { message, stack };\n    dispatch(fetchDetailsError({ error }));\n  }\n};\n\nexport const changeFrom = actionSamplePayload(CHANGE_FROM);\nexport const changeTo = actionSamplePayload(CHANGE_TO);\nexport const setName = actionSamplePayload(SET_NAME);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Chart, { ArgumentAxis, Series, Tooltip, ValueAxis, Label, Legend } from 'devextreme-react/chart';\n\nfunction customizeTooltip(pointInfo) {\n  return {\n    html: `<div><div > <b>Date:</b> ${pointInfo.argumentText}</div>\n<div><b style=\"text-transform: capitalize\">${pointInfo.points[0].seriesName}:</b> ${pointInfo.points[0].valueText}</div></div>`,\n  };\n}\n\nconst LineChart = props => {\n  const state = useSelector(state => state);\n  const { correctedData } = state.details;\n  return (\n    <Chart dataSource={correctedData}>\n      <Series\n        name={props.values}\n        valueField={props.values}\n        type=\"spline\"\n        color=\"#3A80BA\"\n        axis={props.values}\n        argumentField=\"date\"\n      />\n      <ArgumentAxis>\n        <Label overlappingBehavior=\"rotate\" rotationAngle={-75} />\n      </ArgumentAxis>\n      <ValueAxis name={props.values} showZero={true} />\n      <Tooltip enabled={true} shared={true} customizeTooltip={customizeTooltip} />\n      <Legend verticalAlignment=\"top\" horizontalAlignment=\"center\" visible={false} />\n    </Chart>\n  );\n};\n\nexport default LineChart;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { changeFrom, changeTo, fetchDetailsRequest, setName } from '../redux/actions/fetch-details-actions';\nimport { limit, msInDay, userName } from './utils';\nimport LineChart from './chart';\nimport { useForm, Controller } from 'react-hook-form';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Button from '@material-ui/core/Button';\nimport NavBar from './nav-bar';\nimport './components-styles/common-components-styles.scss';\nimport './components-styles/styles-details.scss';\nimport { fetchUsersRequest } from '../redux/actions/fetch-users-actions';\nimport Spinner from './spinner';\n\nconst UserStatistic = () => {\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const params = useParams();\n  const { id, page } = params;\n  const { minDate, maxDate, data } = state.users;\n  const { from, to, correctedData } = state.details;\n  let toInitial = minDate ? Date.parse(minDate) + 6 * msInDay : null;\n  toInitial = new Date(toInitial).toISOString().slice(0, 10);\n  const { handleSubmit, control, setValue } = useForm();\n  useEffect(() => {\n    if (data.length < 1) {\n      dispatch(fetchUsersRequest({ limit, page: page - 1 }));\n    } else {\n      const namePayload = userName(state, id);\n      dispatch(setName(namePayload));\n      dispatch(fetchDetailsRequest({ id, page, from: minDate, to: toInitial }));\n    }\n  }, [data.length]);\n\n  return (\n    <div id=\"details\">\n      <header className=\"flex-container\">AppCo</header>\n      {state.details.loading ? (\n        <Spinner />\n      ) : (\n        <main>\n          <NavBar />\n          <div>\n            <h3>\n              {state.details.first_name} {state.details.last_name}\n            </h3>\n            <div>\n              <form\n                id=\"user-form\"\n                className=\"flex-container\"\n                onSubmit={handleSubmit(() => {\n                  dispatch(fetchDetailsRequest({ id, page, from, to }));\n                })}\n              >\n                <div className=\"form-group\">\n                  <label htmlFor=\"from\">From: </label>\n                  <Controller\n                    name=\"from\"\n                    type=\"from\"\n                    defaultValue={from ? new Date(from) : null}\n                    control={control}\n                    render={() => (\n                      <DatePicker\n                        name=\"from\"\n                        minDate={new Date(minDate)}\n                        maxDate={new Date(maxDate)}\n                        selected={from ? new Date(from) : null}\n                        dateFormat=\"yyyy MMMM dd\"\n                        withPortal={window.matchMedia('(max-width: 700px)').matches}\n                        onChange={date => {\n                          setValue('from', date);\n                          dispatch(changeFrom({ from: new Date(date).toISOString().slice(0, 10) }));\n                          if (new Date(date) > new Date(to)) {\n                            dispatch(changeTo({ to: new Date(date).toISOString().slice(0, 10) }));\n                          }\n                        }}\n                      />\n                    )}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"to\">To: </label>\n                  <Controller\n                    name=\"to\"\n                    type=\"to\"\n                    defaultValue={to ? new Date(to) : null}\n                    control={control}\n                    render={() => (\n                      <DatePicker\n                        name=\"to\"\n                        minDate={new Date(from)}\n                        maxDate={new Date(maxDate)}\n                        selected={to ? new Date(to) : null}\n                        dateFormat=\"yyyy MMMM dd\"\n                        withPortal={window.matchMedia('(max-width: 700px)').matches}\n                        onChange={date => {\n                          setValue('to', date);\n                          dispatch(changeTo({ to: new Date(date).toISOString().slice(0, 10) }));\n                        }}\n                      />\n                    )}\n                  />\n                </div>\n                <Button type=\"submit\" id=\"chooseDate\" className=\"action-button\" variant=\"contained\" size=\"medium\">\n                  Show charts\n                </Button>\n              </form>\n            </div>\n          </div>\n          <div className=\"chart-name\">Clicks</div>\n          {correctedData ? <LineChart values=\"clicks\" /> : null}\n          <div className=\"chart-name\">Views</div>\n          {correctedData ? <LineChart values=\"page_views\" /> : null}\n        </main>\n      )}\n\n      <footer>\n        <div className=\"flex-container\">\n          <div>AppCo</div>\n          <div>All rights reserved by ThemeTags</div>\n          <div>Copyrights © 2019.</div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default UserStatistic;\n","import { useSelector, useDispatch } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { useToasts } from 'react-toast-notifications';\nimport { CLEAN_ERROR } from '../redux/actions/action-types';\n\nconst ErrorHandler = () => {\n  const stateError = useSelector(state => state.allErrorsHandler.error);\n  const { addToast } = useToasts();\n  const dispatch = useDispatch();\n  const cleanError = () => {\n    dispatch({ type: CLEAN_ERROR });\n  };\n  useEffect(() => {\n    if (stateError) {\n      addToast(`Error: ${stateError.message}`, {\n        appearance: 'error',\n        onDismiss: () => cleanError(),\n      });\n    }\n  }, [stateError]);\n\n  return <div id=\"error-handler\"> </div>;\n};\n\nexport default ErrorHandler;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.scss';\nimport Homepage from './components/homepage';\nimport Users from './components/users';\nimport UserStatistic from './components/user-statistic';\nimport { ToastProvider } from 'react-toast-notifications';\nimport ErrorHandler from './components/error-handler-component';\n\nfunction Application() {\n  return (\n    <div className=\"App\">\n      <ErrorHandler />\n      <Router>\n        <Route path=\"/\" exact component={Homepage} />\n        <Route path=\"/users/:page\" exact component={Users} />\n        <Route path=\"/users/:page/user/:id\" exact component={UserStatistic} />\n      </Router>\n    </div>\n  );\n}\n\nconst App = () => {\n  return (\n    <ToastProvider>\n      {' '}\n      <Application />{' '}\n    </ToastProvider>\n  );\n};\nexport default App;\n","import { FETCH_USERS_REQUEST, FETCH_USERS_ERROR, FETCH_USERS_SUCCESS } from '../actions/action-types';\n\nexport const initialUsersState = { loading: false, error: null, data: [], total: null, minDate: null, maxDate: null };\n\nexport const usersReducer = (state = initialUsersState, action) => {\n  switch (action.type) {\n    case FETCH_USERS_REQUEST: {\n      return { ...state, loading: true, error: null };\n    }\n    case FETCH_USERS_ERROR: {\n      return { ...state, loading: false, error: action.payload.error };\n    }\n    case FETCH_USERS_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        data: action.payload.data,\n        total: action.payload.total,\n        minDate: action.payload.minDate,\n        maxDate: action.payload.maxDate,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { msInDay } from '../../components/utils';\n\nexport const correctStatisticBuilder = (data, from, to) => {\n  const dataToCorrect = JSON.parse(JSON.stringify(data));\n  const fromParsed = Date.parse(from);\n  const toParsed = Date.parse(to);\n  const diffInDays = (toParsed - fromParsed) / msInDay + 1;\n  let zeroArray = [];\n  for (let i = 0; i < diffInDays; i++) {\n    const dateParsed = fromParsed + msInDay * i;\n    const dateIsoString = new Date(dateParsed).toISOString().slice(0, 10);\n    zeroArray.push({ clicks: 0, page_views: 0, date: dateIsoString });\n  }\n  let correctData = [];\n  if (dataToCorrect.length === 0) {\n    correctData = zeroArray;\n  } else {\n    correctData = zeroArray.map(item => {\n      if (dataToCorrect.length === 0) {\n        return item;\n      } else {\n        for (let i = 0; i < dataToCorrect.length; i++) {\n          if (item.date === dataToCorrect[i].date) {\n            return dataToCorrect.splice(i, 1)[0];\n          } else if (Date.parse(item.date) > Date.parse(dataToCorrect[i].date)) {\n            dataToCorrect.splice(i, 1);\n            return item;\n          }\n        }\n        return item;\n      }\n    });\n  }\n  return correctData;\n};\n","import {\n  FETCH_DETAILS_REQUEST,\n  FETCH_DETAILS_ERROR,\n  FETCH_DETAILS_SUCCESS,\n  CHANGE_FROM,\n  CHANGE_TO,\n  SET_NAME,\n} from '../actions/action-types';\nimport { correctStatisticBuilder } from './utils';\n\nexport const initialDetailsState = {\n  loading: false,\n  error: null,\n  first_name: null,\n  last_name: null,\n  data: null,\n  from: null,\n  to: null,\n  correctedData: null,\n};\n\nexport const detailsReducer = (state = initialDetailsState, action) => {\n  switch (action.type) {\n    case FETCH_DETAILS_REQUEST: {\n      return { ...state, loading: true, error: null };\n    }\n    case FETCH_DETAILS_ERROR: {\n      return { ...state, loading: false, error: action.payload.error };\n    }\n    case FETCH_DETAILS_SUCCESS: {\n      const { data, from, to } = action.payload;\n      const correctedData = correctStatisticBuilder(data, from, to);\n      return { ...state, loading: false, error: null, data, from, to, correctedData };\n    }\n    case CHANGE_FROM: {\n      const { from } = action.payload;\n      return { ...state, from };\n    }\n    case CHANGE_TO: {\n      const { to } = action.payload;\n      return { ...state, to };\n    }\n    case SET_NAME: {\n      const { first_name, last_name } = action.payload;\n      return { ...state, first_name, last_name };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { CLEAN_ERROR } from '../actions/action-types';\n\nexport const initialErrorState = { error: null };\nexport const errorReducer = (state = initialErrorState, action) => {\n  if (action.payload && action.payload.error) {\n    return {\n      ...state,\n      error: action.payload.error,\n    };\n  } else if (action.type === CLEAN_ERROR) {\n    return { error: null };\n  } else {\n    return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { usersReducer } from './users-reducer';\nimport { detailsReducer } from './details-reducer';\nimport { errorReducer } from './error-reducer';\n\nconst rootReducer = combineReducers({\n  users: usersReducer,\n  details: detailsReducer,\n  allErrorsHandler: errorReducer,\n});\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/root-reducer';\nimport thunk from 'redux-thunk';\nimport { initialDetailsState } from './reducers/details-reducer';\nimport { initialUsersState } from './reducers/users-reducer';\nimport { initialErrorState } from './reducers/error-reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nconst initialState = {\n  users: initialUsersState,\n  details: initialDetailsState,\n  allErrorsHandler: initialErrorState,\n};\n\nconst store = createStore(rootReducer, initialState, enhancer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}